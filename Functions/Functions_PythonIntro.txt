Functions
1.	Python Basics
a.	Finding the variable data type using "type" function
print(type(china_exact))

b.	Converting data types in python
int_to_str = str(china_rounded)
str_to_int = int(int_to_str)

c.	To add values to a list object, use the list.append() method.

d.	Available list.method in python
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists

e.	Opening and Reading files
A = open("story.txt", "r")
G = A.read()

f.	The split() method
sample = "john,plastic,joe"
split_list = sample.split(",")
print(split_list)

# Here's another example.
string_two = "How much wood\ncan a woodchuck chuck\nif a woodchuck\ncould chuck wood?"
split_string_two = string_two.split('\n')
print(split_string_two)

g.	Loops
For loops
ten_rows = rows[0:10]
for rate in ten_rows:
    print(rate)

h.	List of Lists
three_rows = ["Albuquerque,749", "Anaheim,371", "Anchorage,828"]
final_list = []
for row in three_rows:
    split_list = row.split(',')
    final_list.append(split_list)
print(final_list)

i.	Accessing elements in Lists of List
# Returns the first list's first element, 'Albuquerque'.
first_list_first_value = final_data[0][0]

j.	Counter and Index
counter = 0
index = 0

for city in cities:
    if city == "Washington":
        index = counter
    counter += 1
k.	Highest value in List
highest = crime_rates[0]

for cr in crime_rates:
    if cr > highest:
        highest = cr
print(highest)        
l.	Convert numerical values
print(nested_list[0:5])
numerical_list = []
for cr in nested_list:
    f = cr[0]
    h = float(cr[1])
    i = [f, h]
    numerical_list.append(i)
print(numerical_list[0:5])

m.	IN statement 
cat_found = "cat" in animals
space_monster_found = "space_monster" in animals

n.	Counting with dictionaries
pantry = ["apple", "orange", "grape", "apple", "orange", "apple", "tomato", "potato", "grape"]
pantry_counts = {}

for item in pantry:
    if item in pantry_counts:
        pantry_counts[item] = pantry_counts[item] + 1
    else:
        pantry_counts[item] = 1
weather_counts = {}
for item in weather:
    if item in weather_counts:
        weather_counts[item] = weather_counts[item] + 1
    else:
        weather_counts[item] = 1

o.	Functions
def return_list(lista):
    epmt_list = []
    for each in lista:
        first = each[0]
        epmt_list.append(first)
    return epmt_list

movie_names = return_list(movie_data)
print(movie_names[0:5])

with IF statement
wonder_woman = ['Wonder Woman','Patty Jenkins','Color',141,'Gal Gadot','English','USA',2017]
def is_usa(input_lst):
    if input_lst[6] == "USA":
        return True
    else:
        return False
wonder_woman_usa = is_usa(wonder_woman)

with multiple arguments
def index_equals_str(input_lst,index,input_str):
    if input_lst[index] == input_str:
        return True
    else:
        return False

With optional parameter
def counter(input_lst,header_row = False):
    num_elt = 0
    if header_row == True:
        input_lst = input_lst[1:len(input_lst)]
    for each in input_lst:
        num_elt = num_elt + 1
    return num_elt
    
wonder_woman_in_color = index_equals_str(wonder_woman,2,"Color")
print(wonder_woman_in_color)

p.	A
def clean_text(text_string, special_characters):
    cleaned_string = text_string
    for string in special_characters:
        cleaned_string = cleaned_string.replace(string, "")
    cleaned_string = cleaned_string.lower()
    return(cleaned_string)

def tokenize(text_string, special_characters, clean=False):
    cleaned_text = text_string
    if clean:
        cleaned_text = clean_text(text_string, special_characters)
    tokens = cleaned_text.split(" ")
    return(tokens)

final_misspelled_words = []
def spell_check(vocabulary_file, text_file, special_characters=[",",".","'",";","\n"]):
    misspelled_words = []
    vocabulary = open(vocabulary_file).read()
    text = open(text_file).read()
    
    tokenized_vocabulary = tokenize(vocabulary, special_characters)
    tokenized_text = tokenize(text, special_characters, True)
    
    for ts in tokenized_text:
        if ts not in tokenized_vocabulary and ts != '':
            misspelled_words.append(ts)
    return(misspelled_words)

final_misspelled_words = spell_check(vocabulary_file="dictionary.txt", text_file="story.txt")
print(final_misspelled_words)
